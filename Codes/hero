git init  ( to intilize the git repo)

git config --global user.name "Polarapu Prasad"
git config --global user.email "devopstraining2015@gmail.com"

git config --list

git config --global --unset user.name
git config --global --unset user.email

=========================================
touch file1
ls
git status
git add file1
git status
git commit -m "label" file1
git status
git log
git show cid

------------------
touch file2 file3 file4
ls
git add file2 file3 file4
or
git add .
or
git add *
or
git add -A
git status
git commit -m "label" 




===========================

git add file  (workspace to staging)
git reset head file  (staging to workspace)

git commit -m "label" file  (staging to local)
git reset --soft cid  (local to staging)

git reset --mixed cid  (local to workspace)
git reset --hard cid   (to delete commit log and commit files)

================================
create a repo in git-hub

git clone https://github.com/polarapu/batch86.git
ls
cd batch86
ls
touch file1
git status
git add file1
git status
git commit -m "sample commit"
git log
git push

if you want to modify any file open file manually and edit data
git status
git add .
git commit -m "data modified"
git push


if want to delete a file

rm file1
git status
git add .
git commit -m "deleted file"
git push

==================================================

git clone https://github.com/polarapu/batch86.git
ls
cd batch86
touch prasad
git status
git add prasad
git status
git commit -m "sample commit from prasad"
git push
user & passwd
git pull --rebase
git push
git pull --rebase
git push

============================
git branch
git branch release1
git branch
git checkout release1
create a data
git branch -d release1  (to delete in local)
git push origin release1
or
git push /path/of/c-repo release1

git push origin -d release  (to delete in central repo)


Logs
=====
git log
git log -n
git log --oneline
git log --oneline -n
git log --author=prasad
git log --author=prasad -n
git log --author=prasad --oneline
git log --author=prasad --oneline -n

git log --since=yy-mm-dd
or
git log --after=yy-mm-dd

git log --until=yy-mm-dd
or
git log --before=yy-mm-dd 

git log --since=yy-mm-dd --until=yy-mm-dd
or
gitlog --after=yy-mm-dd --before=yy-mm-dd

gitlog --after="yy-mm-dd 7:00" --before="yy-mm-dd 24:00"

git log -- file file-name

git commit -m "label" -m "label2" -m "label3"

git log --grep "label"

=============================
Alias
=====

git status
git config --global alias.s "status"
git s

git log --oneline
git config --global alias.l1 "log --oneline"
git l1

git config --list
git config --global alias.cl "config --list"
git cl


git commit -m "test-commit"
git config --global alias.cmt "commit -m "test-commit""
git cmt

git config --global --unset alias.cl


=============================
TAG
==
git tag
git tag T-1.0
git show T-1.0
git tag -d T-1.0

git tag T-1.0 cid
git push origin T-1.0
or
git push --tags  (all tags)
git checkout T-1.0  

git push origin -d T-1.0 

.gitignore
----------
file1
file2

diff
====
git diff main release1
git diif f1 f2



==============
Stash
revert
cherry-pick

merege vs rebase
fork

amend
fetch
origin































































