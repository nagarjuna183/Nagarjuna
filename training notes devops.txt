https://github.com/polarapu/batch86.git

if reject:

git pull --rebase

git push
==============
Lunixs Notes
--------------
User Name : root 
password : root123
----------------------------
==================================
GIT:-
==================================

git reset head file (index to work)
git reset --soft cid(local to index)
git reset --mixed cid (local to work)
git reset --hard cid (detele to all data)
git config --global alias.s "status" {git s=git status} (add)
git config --global --unset alias.s (remove)
git checkout -b branch1 (create branch along with chechout to branch1)
git push origin brach (push branch from git to hub)
git push /git.hub/.com(path) branch1
git push it not work go .git config change path
git branch -d branch1 (delete) local
git push origin -d branch1(delete) hub
git stash save "label" (only stash modified and stagin/indexing files only)
git stash show stash@{0} (see the stash 0 details)
git stash show -p stash@{0} (see the stash 0 total information)
git stash list (see list of stash files)
git revert cid (back to previous from git to hub)
git cherry-pick cid (merge to one branch to antoher branch only particular file)

git merge r1 (main) all r1 files merge to main
git cherry-pick cid (one branch local repo to another local repo only single file(cid))
@git merge main(with create commit id)(one branch add and commit another branch one file add and commit and use git merge we will get another commit cid)
@git rebase main (without create commit id)(one branch add and commit another branch one file add and commit and use git rebase we won't get another commit cid)
git rebase --continue ( central to local conflict)
git log -1 (single log show)
git log --oneline (showing short details)
git log --oneline -n(6)(how many commit lines use n)
git log --author=nagarjuna (see author name to see all logs)
git log --author=nagarjuna --oneline
git log --since=2022-11-25
git log --after=2022-11-25
git log --until=2022-11-25
git log --after=2022-11-25 --before=2022-10-25
git log -- file abcd (file name) searching with particular file {Note: need after speach -- file}
git commit -m "nagarjuna -m "vfhkulj" (add need coomit data)
git log --grep "nagarjuna" (searching total in the gobal {Note : need to git " na" ) grep means (global regular expresions)
git config --global alias.s "status" {git s=git status} (add)
git config --global --unset alias.s (remove)
git config --list
==================
<pluginGroup>org.sonarsource.scanner.maven</pluginGroup>
---------------------------------------------------------------------------
*git stash list (all stash data)
git stash save "label name" (move to stash)
stash@{0}(latest stash position)
git stash show stash@{0}( (see the file name)
git stash show -p stash@{0}( (see the all details)
git stash taken only(modify file,staging index file)NOT new file
*git revert cid (we can taken data back)(we can two 3 times also revert no problem)
*git cherry-pick cid (we have two branches one branch did two commits if we use
 merge it will come to file but we want only one commit than use git cherry-pick that commit cid)
*(we want one commit file detail then use cherry-pick)
git merge branch1(it create one new commit)
git rebase branch1(without creating new commit)
@git fetch (if any changes happend in git hub then you use git fetch then use git branch -r then use git show origin/main after use git merge origin/main then it come)
git pull=fetch+merge
git fetch
git branch -r
git show origin/main
git merge origin/main

grep "naga" filename

@github Fork  Steps:-
first one which person github hub repository we want open then use FORK option
then take link and clone :like(ex: http//:github.com/nagarjuna183/batch86)
add something and push that account
then create pull request
after who ever person taken(batch86) they can merge then that commit details automatically added.


=========================================
LINUX:-
=========================================
OS : windows,linux,mac
1995-starting language -b now c lauguage
2005 -git
linux invotor : Linus Benedict Torvalds

linux login conect 
git bash : ssh root@ip address (ex: ssh root@192.168.20.132)
cmd : ssh root@ipip address

windows applications directory : c directory
linux applications directory : / directory
pwd : present working directory
ls -lt   recent to old
ls -ltr old to recent (list time recurcivily)
ls -a (show all files along with hiden files)
rm file (delete file)
rmdir dir (delete directory)
rm -rf file
rm -rf dir
mkdir -p dir1/dir2/dir3 (to create nested directory)
absolute path (from staring to ending path)(EX: cd opt/dir1/dir2/dir3/dir4 Now you are in dir2 then use this path)
reletive path (from the working to ending)(EX: cd dir3/dir4 Now you are in dir2 then use this path)
cat > file then you can write data and save use CTRL+D
cat >> file add another data here add data old data and new data
cat > file add data here data modify
which java : get path
which maven :get path
cp -r file /opt/file
----------------------
VI Editor:-
1. insert mode : esc i
2. command line mode
3. execution mode :wq!, :q!, :w!
--------------------------------
command line mode tricks:-
---------------------------------
dd-delete a line
ndd-no.of lines delete
yy- copy a line
p-paste
nyy-no of lines copy
dw-delete a word
ndw-delete no.of word
x-char delete
$-end of the line
^-starting of the line
o-create a new line below
O-above  a new line created
G-ground last
H-head top
a - append (after one one word)
r-replace
R- continues replace
u-undo

grep -i "f*" nagarjuna (-i means casesencetive remove")
----------------------------------------------
Linux Main IMP
------------------------------------------------
ps -ef = task manager  (process effective field)
cat /etc/passwd : logins
list users : cat /etc/shadow
nagarjuna:x:1003:1004::/home/nagarjuna:/bin/bash  : user tenga
user name:password:userid:groupid:comment message: userhome directory:shell directory
create user name :  useradd nagarjuna
setup password : passwd prasad
delete user : userdel nagarjuna :without deleting home directory
delete user : userdel -r nagarjunaa : wth delete home directory
create user manual: useradd -c "devops user" -d "/opt/nagarjuna" -s "/bin/sh" nagarjuna
change any thing : usermod -s "/bin/bash" nagarjuna
we can change password with only root user
cat /etc/group
create group :- groupadd group1
delete group :- groupdel group1
add user into group :- usermod -aG group1 nagarjuna
{root-admin-user}
# means root user
$ means user
swithing user : su - nagarjuna
whoami : we can get present user

ower | group | others
022 = umask value
rwx=read write exec
r=read = 4
w=write = 2
x-exec=1

dir 
 777
-022
-------
755
-------
7-rwx
5-r-x
5-r-x
dir =drwx-r-x r-x

file =

 666
-022
-------
 644
------
6-r-w
4-r
4-r
file=rw-r--r--

change permision per dir or file = chmod 777 filename

only perticular dir1 chnge permssion : chmod 777 dir1
change permission include file also: chmod -r  777 dir
change all : chmod 777 * 
ps -f | grep nagarjuna
kill -9 process id 
kill -9 1993 : pt1 user delete
wc nagarjuna ; word count
wc -l  nagarjuna ; lines
wc  -c nagarjuna; characters
wc -lw nagarjuna ; line words
wc nagarjuna
mv oldname newname
mv nagarjuna virat (change name)nagarjuna changed to virat
df
df -H disk details
file or directory size = du -sh opt
du -sh lib (lib directory details)
du -sh file or directory name (properties)

Run levels:-7
--------------
init 0 : shutdown server
init 1 : single user mode
init 2 : multi user mode
init 3 : multi user mode all permissions (default run level)
init 4 : reserve mode
init 5 : gui
init 6 : reboot

who -r = checking level

RHEL :red hot company
------
linux
centos
ubuntu

UNIX
===============
multi user mode
multi tasking
user to user communicate
security

we must install java for run all applications like maven, tomcat

tar (tep arque)
xvf (extract verbege force
cat etc/passwd (users)
su - nagarjuna (chaging user)
root
==============
MAVEN
===============
project management, build tool maven that why we are using maven
Build tools :maven,ant,Ms-Build, Gradle
POM : Project object model
msi or exe- install windows
rpm-install Linux
war,jar,ear - Applications server (Tomcat)
maven repo 3 types of repos
------------------------------
1 remote repo (3rd party)(others if we want we can use URL in POM file)
2 central repo (maven communty)
3 local repo (.m2)

.m2 directory path
-------------------
laptop :drive/user/.me
linux : home/nagarjuna/.m2 (nagarjuna that is user if there user nagarjuna)
linux : root/.m2

Project type(structure) we can create following commend:
mvn archetype:geneate
1.0 snapshot (means 1.0 is implemening or still not release)
mvnrepository.com (use url and get all repogitory versions)
where is poa there only one cmd(IMP)
mvn goals:
------------
mvn validate (validate of code)
mvn compile (to compile code genral this one doing developers)(after compile created classes)
mvn test( testing code)
mvn clean (remove all target files)
mvn package (create package)
mvn goal or lifecycle phages total goal 23
:-mvn clean install
intergrate -test means testing envinroment for suitble or not.

local repository we have plugins(files,document)(version its there in properties in poa xml)
plugins connect to central repo there are lot of plugins available.
dependencis : we have use lot of dependencies which of there detail depended in this file (like group id, artifcatc id, version)

local means .m2 file
maven plugins are re-useble.


@list all files git bash use ls,clear
@list all files git bash use dir,cls
maven artifactid means its create file name
mvn archetype:geneate > a.out (mvn archetype:geneate this data saved a.out. what ever save data use commond > filename
=======================
Tomcat:-
=======================
web appliaction : tomcat
default port no: 8080
conf/tomcat-users.xml (for config logins)
Tomcat support only :war
=====================
JENKINS:-
=====================
program files and program data (we have to delete in windows if you install fresh)
if you are normal your you can use : sudo (if your login with root that why no need to use)
my view : your permisions jobs
Queue : first in first out (booking counter like job queue)
configure  System: Home directory of  jenkins and exicuter count)
Global tool configuration: configure of tools (like git tomcat)
manage plugins (install plugins)
manage Nodes and Clouds : using nodes
configure global security : permission of users
manage credisatial : logins
configure credential providers : execuve and restuct(don't show in logins in configure)
manage user: number of users
system infomation : system to data (all paths and details, about jenkins)
load statistics : total data view graphically
manage old data : old data storage
prepare for shutdown : notify of jenkins label for shutdown info
executor : 5 first 5 and next doing 6,7 that reason you can use only 5-10 only
to avoid we are using slave (Node)
Restrict project naming : we don't want some symbols that use ex : @&+
which java : get path
which maven : get path
---------------------------------------------------------------------------
Job Configuration:-
---------------------------------------------------------------------------
Discard od build : delete build history of job
this project build with parameterized : using chosing option then show build with parameters then question then give option
throttle builds : we can restict like month or year. we can mentions how many time we can run
Execute concurrent builds if necessary : it click means parlelly build all builds
Build periodically : that job to build periodically
Poll SCM : that job to build why SCM code added
Diffrence : 1. to build that particular time build job 2. poll scm means to code upload on like git that particular job build
* * * * * : Min Hour Day Month Day of week (Ex: 12 12 13 0;  0,7 means sunday)

@Build first job it automatically stared Reason : first checking jenkins work space its not available any data later checking git hub THERE IS DATA AVAILABLE that why conside some data added after automatically started.
deploy to container plugin for deploy in the tomcat application

@to build and set upstream and down stream we can use that particular job 
1. build triggers : select build after build
2. post build option : add and select Build other projects option
OR
1. build triggers : selete build option and open orher job and use sam as well as.

PLUGINS:
green ball : previous it use for showing when build success show in green colour
deploy to container plugin : tomcat use deploy
delivery pipeline, build pipeline, backup, thinbackup

disk-usage: all job size (storage)
next-build : next build number we can set 1 2 4 missed 3 then we can edit 4 replace delete with 3
clone-workspace : one job workspace to copy other job then using clone-workspace 
nested view : nested jobs creating
blue ocean : diffirent view
build pipeline: pipeline for using

@restart: we can run localhost:8080/restart then it not safe restart with delete running job
@safeRestart: we can run localhost:8080/restart then it safe restart safe running after restarting

advanced option : to download  with url or though file
Authorization : giving permissions
role-based authorization : plugins
 
matrix based : each user giving permissions and we need to add users

project based : project based specific user allocate like user1 working developing team want read and write but per us only read option

role based : based on roles of organisation

@@when we are giving matrix and project based persion DON"T save without giving permission of admin
Must add user give permission of Admin

@ project based : we can give permission overall read permison and job read only permisssion then
go to job and select Enble project-base  security and give all permission that particular job

@role based : when we are click role based we can get one option 
manage and assign roles there we create roles like devops and test

@server/slave/agent/node concepts all are same
slave no need to jenkins application but need java and java path also need same path need.

@built in node : master

@node tool Location : we can configure java and git also
@jenkins backup processors
1. downtime 
2. backup
3. upgrade
4. techical verification (TVT)
5. business verification (BVT)

@reload configuration from disk : without restarting jenkins get data
@thinbackup or period backup : we can set time to backup data

Backup types :-
full backup :we are taking full backup : full backup
incremental backup : day from to today like monday to tuesday like daywise : full backup + increamental
diffrencial backup : sunday to monday diffrent day backup : monday-tuesday
------------------------------
stop jenkis service
@upgrade
jenkins war file location : usr/share/java
we need delete old war file and replace new war file start
-------------------------------
@jenkins pipelines:-
1.Build, Delivery plugins
2.Script

@build with jobs you can selete freestyle Project
@build with script use pipeline

=============================================
AWS:-
==============================================
EC2
AMI
SNAPSHOT
VOLUMES
ASG
ELB

VPC
====
Subnets
Gateway
Route table
ENI
EIP
peering


RDS
Route-53
EFS
S3
SNS
code commitcode deploy
code pipe line
code stare
EKS
ECS
Lamda

IAM
Cloudwatch
SMS
================================================

=====================================
CHEF:-
=====================================
configuration mangament tools :-
------------------------------------
Ansible
Chef
Puppet
Salt-Stack
Useage of Configuration management tool:- no of servers work parallel at time

@chef componants:-
workstation, chef server, nodes machines

chef server link :- manage.chef.io

workstation : chef-workstation
nodes : chef client 
chef server : chef server

rpm file install:-
rpm -ivh file.rpm :-installation rpm file
rpm -qa chef* (see it is installed checking)
rpm -e file* (delete rpm file)
workstation to chef server to connect to use staterkit key
powershell for chef
@we can run any command on chef inside chef-repo
node connect to workstationand chef server followed command:
knife bootstrap 192.168.20.132 -U root -P root123 -N Node-1
Knife bootstrap     ip          -U      root -p passwd -N Node-1

staterkit in we are using chef-repo

workstation (cookbooks, recipes)
@Run the cookbook: chef genarate cookbook cookbook1
knife cookbook upload cookbook1
after come to cookbook1 and there recipes and open default.rb
there write rb code
chef-client =run in node
create chef.sh and give chmod 777 chef.sh permision
crontab -e then run below script
* * * * * /opt/chef.sh
min hour date day of the month month of the year day of the week 
today 09-02-2023

18 12 09 02 05 (week means (0,7 sunday)

{in organisation may 2 hour and 4 hours)

create file with cookbook in default.rb file

file "/opt/file123"
action :create
end

create directory with cookbook in default.rb file

directory "/opt/dir123"
action :create
end
-------------------------------
chef server add node then we can use blow script

knife node run_list add Node-1 "recipe[cookbook1]"

we need to create chef.sh file give permisson chmod +x chef.sh 

chef.sh following code:-
------------------------
for i in Node-1 Node-2
do 
knife node run_list remove $i "recipe[git]"
done

remove from run list:-
for i in Node-1 Node-2
do 
knife node run_list add $i "recipe[git]"
done

multi nodes run:-
------------------------
for i in $(knife node list)
do 
knife node run_list add $i "recipe[git]"
done


crontab -l for checking crontab file open

package installing with rubby file
---------------------------------
package "git" do
action :install
end

Uninstall package:-
---------------------
package "git" do
action :remove
end

default if your are not mentions

package "git"
---------------------------------
services start followed below:-

package "httpd" do
action :install
end

service "httpd" do
action :start
end

service "httpd" do
action :enble 
end

if it not run do following step

systemctl stop firewalld

templete concept:-
-------------------

package "httpd" do
action :install
end

service "httpd" do
action [:start, :enable]
end

templete "/var/www/html/index.html" do
source 'test.erb'
end

then we can create templetes directory
cook books site : https://supermarket.chef.io

DATA BAGS
-----------------------------------
data bags : global varibles
we must upload data bags json file only
Upload workstation to server:-
----------------------------------
knife data bag create users
knife data bag create groups

json file create user:- user1.json

{
"id" :  "user1",
"comment" :  "devops user",
"uid" :  2378,
"gid" :  0,
"home" :  "/home/user1",
"shell" :  "/bin/bash"
}


json file create user:- user2.json

{
"id" :  "user2",
"comment" :  "devops user",
"uid" :  0,
"gid" :  3230,
"home" :  "/home/user2",
"shell" :  "/bin/bash"
}

Upload workstation from chef server
---------------------------------------
knife data bag from file users user1.json user2.json


create group json format: group.json
-----------------------------------------

{
"id": "batch86",
"gid": 2029,
"members": ["user1", "user2"]
}

upload workstation to server
---------------------------------
knife data bag from file groups group.json

json format uploading usera and group:-

chef generate cookbook users
============================

default.rb
===========

search("users", "*:*").each do |user_data|
user user_data["id"] do
comment user_data["comment"]
uid user_data["uid"]
gid user_data["gid"]
home user_data["home"]
shell user_data["shell"]
end
end

group.rb
=========

search("groups", "*:*").each do |group_data|
group group_data["id"] do
gid group_data["gid"]
members group_data["members"]
end
end

============================
Upload all rube files following commond;-
@knife node run _list add Node-1 "recipe[users]", "recipe[user::group]", "recipe[user::test]" 

upload at a single commond following below:-
-----------------------------------------------------
where we are creating default.rb file there under we can write following scripe:- include_recipe "users::group"
if we want 2 where we are creating default.rb file there under we can write following scripe:- 

include_recipe "users::group"
include_recipe "users::test"
================================================
search("users", "*:*").each do |user_data|
user user_data["id"] do
comment user_data["comment"]
uid user_data["uid"]
gid user_data["gid"]
home user_data["home"]
shell user_data["shell"]
end
end

include_recipe "users::group"

=============================================
if you upload from server to node ALWAYS UPLOAD LATEST VERSION
we want particular version we need to go environment concept

generally enveronment defult if are creating manual envirn file go though going file that version they ca take 
Ex: if we are uploading file default 0.1.0 if environment 0.1.2 then its goes 1.2 as per environment
==================================================================
Roles:-
role is group(list) of cookbooks

uploading roles workstation from chef-server:-

knife role from file role.rb

@we must use this commond only roles directory place

uploading roles run list in chef server following commond:-
knife node run_list add Node-1 "roles[Test-role1]"
knife node run_list remove Node-1 "roles[Test-role1]"

upload cookbooks, roles run list following below:-
knife node run_list remove Node-1 "roles[Test-role1]" "recipe[cb1]"
list the all cookbooks:- knife cookbook list
 
@@if you go company we need all cookbooks that time we need to replace pem file .chef

we want to download all cookbooks from server to workstation

@@ commond :- knife download /cookbooks

CHEF SERVER DETAILS FIND FOLLOWED COMMONDS:-
-------------------------------------------------------------

list nodes :- knife node list
delete node :- knife node delete Node-1
delete cookbook :- knife cookbook delete cb1
list data bag :- knife data bag list
delete data bag :- knife data bag delete users
list environment : knife environment list
show environment :- knife environment show env1
delete environment :- knife environment delete env1
====================================
ANSIBLE
====================================
Redhat company : Ansible

its conect with SSH
Ansible : agent less configuration system
chef, puppet : agent configuration  system

Installation Ansible:-
-----------------------
yum repolist
yum install epel-release -y (Extra Package for Enterprise Linux
yum install openssl -y
yum install ansible -y
-------------------------
Ansible conf file : /etc/ansible/ansible.cfg
Ansible Home directory : etc/ansible
Inventory file : etc/hosts

we need to open ansible.cfg and enble followed user

inventory : hosts 
sudo user : root

Login to server :-
----------------
ssh@root@ip
password

Login to user:-
-----------------
su - user

we can access user without password following format:-
we need to open : visudo
@@we need to be edit this file(visudo) BEWARE
we need to give permission for what users you want that files

if you login any thing use first sudo
------------------------
sudo yum install git -y

NOPASSWD: ALL (always with out password)
we can create ssh key : ssh-keygen
its save in the directory ansible/.ssh

server to node copy key:
----------------------------
ssh-copy-id ansible@192.168.20.131
then it give ansible password

copy data with OS:-
---------------------
windows to linux :winsp
linux to linux : scp src user@ip : path
 secure copy source file
       scp              src            ansible @192.168.20.131:/home/ansible

FILE COPY :
-------------
@@scp reddy ansible@192.168.20.131:/home/opt

Directory Copy:
------------------
scp -r nag ansible@192.168.20.131:/home/opt

ANSIBLE COMMANDS:
==================

LINUX COMMANDS IN ANSIBLE:-
===============
checking ansible to connect how many ip address

connecting commond : ansible all -m ping

Installation process of ansible in node:-

@ create ansible user :give later password
@visuo :give full permissions 
later shh-copy-id ansible@ip give in sever only
last ip address add in the server file: vi /home/ansible/host
----------------------------------------------------

ansible 192.168.20.131,192.168.20.132 -m ping

ansible all/group/id -b -a "ls-l/opt"  : to list in opt (-b means sudo permision -a atribute)
create a file : ansible all -b -a "touch /home/ansible/nagarjuna"
create a directory : ansible all -b -a "mkdir /home/ansible/nagarjuna"
ansible 192.168.20.131, localhost -b -a "touch /home/opt/sneha"

installing packages:-
ansible all -b -a "yum install git -y"
ansible all -b -a "yum install wget -y"
ansible all -b -a "git --version"

ansible all -b -a "service jenkins status"

ansible all -b -a "useradd dp" (create user)
ansible all -b -a "head -3 /etc/passwd" (list users top 3)

ansible all -b -a "userdel -r dp"
---------------------------------------------------------
ANSIBLE MODULES ANSIBLE;-
=====================

installing packages in modules:-
-----------------------------------
ansible all -m yum -b -a "name =git state=latest" (to install package)
here we can get "changed option"

ansible all -m yum -b -a "name =git state=absent" (to remove package)
ansible all -m yum -b -a "name=package state=absent"
ansible all -m yum -b -a "name=httpd"
ansible all -m service -b -a "name=httpd state=started" (start service with command)
ansible all -m user -b -a "name=user1 state=present(or) absent" (creating users)
ansible all -m file -b -a "name=/opt/nagarjuna state=directory" (createing directory)
ansible all -m copy -b -a "src=/opt/nagarjuna dest=/opt/m"
-------------------------------------------------------------
playbook :- to run multi commands
we should run playbook yml or yaml


git install ansible
-----------------
ansible all -b -a "yum install git"
ansible all -m yum -b -a "name=git state=present"

ansible-playbook play.yml (file)
------------------------------------

---
- hosts: all
  become: yes
  tasks:
  -name= installing git package
   yum: name=git state=latest

:-MEANINGS
--------------
hosts = all (group)
become =yes (root,admin permission or -b -a)
tasks (label name)

output review;-
------------------
green =no changes (ok)
yellow = changed something
red = unreachable
@@@ANY CHANGES OF ANSIBLE HOSTS (INVENTORY FILE WE SHOULD OPEN WITH SUDO COMMAND NOT VI)

we can run with following command:-
------------------------------------------
ansible-playbook play.yml

we are using ansible play.yml run at a time more tasks
if we are unsinstall package of chef we need remove .rpm
